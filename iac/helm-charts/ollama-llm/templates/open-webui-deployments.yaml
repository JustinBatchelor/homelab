---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: open-webui
  namespace: ollama
spec:
  replicas: 1
  selector:
    matchLabels:
      app: open-webui
  template:
    metadata:
      labels:
        app: open-webui
    spec:
      containers:
        - name: ollama-container
          image: {{ .Values.open_webui.image }}
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: OLLAMA_BASE_URL
              value: {{ .Values.ollama.route }}
          volumeMounts:
            - name: open-webui-data
              mountPath: /app/backend/data
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      volumes:
        - name: open-webui-data
          persistentVolumeClaim:
            claimName: open-webui-data
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: open-webui-data
  namespace: ollama
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: open-webui
  namespace: ollama
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  selector:
    app: open-webui
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 8080
  type: ClusterIP
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: ollama
  namespace: ollama
  annotations:
    argocd.argoproj.io/sync-wave: "10"
spec:
  host: "ollama.apps.sno.batchelor.live"
  to:
    kind: Service
    name: open-webui
    weight: 100
  port:
    targetPort: 8080
  tls:
    termination: edge
  wildcardPolicy: None